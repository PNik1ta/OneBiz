pipeline {
    agent any

    parameters {
        string(name: 'GIT_BRANCH', defaultValue: 'main', description: '–í–µ—Ç–∫–∞ –¥–ª—è –¥–µ–ø–ª–æ—è')
    }

    environment {
        DOTENV = credentials('onebiz-dotenv')
    }

    stages {
        stage('Checkout Code') {
            steps {
                script {
                    checkout([$class: 'GitSCM',
                        branches: [[name: "*/${params.GIT_BRANCH}"]],
                        userRemoteConfigs: [[
                            url: 'https://github.com/PNik1ta/OneBiz',
                            credentialsId: 'github-token'
                        ]]
                    ])
                }
            }
        }

        stage('Write .env') {
            steps {
                script {
                    writeFile file: 'backend/.env', text: "${DOTENV}"
                }
            }
        }

        stage('Fix volume permissions') {
            steps {
                sh '''
                sudo chmod -R 777 "$WORKSPACE/backend/postgres-data" || true
                '''
            }
        }

        stage('Kill containers on 9090') {
            steps {
                sh '''
                CONTAINER=$(docker ps -q --filter "publish=9090") || true
                if [ ! -z "$CONTAINER" ]; then
                    echo "‚ö†Ô∏è Killing container on port 9090: $CONTAINER"
                    docker kill $CONTAINER || true
                fi
                '''
            }
        }

        stage('Kill process on port 9090') {
            steps {
                sh '''
                PIDS=$(sudo lsof -ti :9090) || true
                if [ ! -z "$PIDS" ]; then
                    echo "üéØ Killing processes on port 9090: $PIDS"
                    for pid in $PIDS; do
                        sudo kill -9 $pid || echo "‚ö†Ô∏è Failed to kill $pid (maybe already dead)"
                    done
                else
                    echo "‚úÖ No process on port 9090"
                fi
                '''
            }
        }

        stage('Kill container on port 9090 (—Ç–æ—á–Ω–æ!)') {
            steps {
                sh '''
                CONTAINER_ID=$(docker ps --filter "publish=9090" -q) || true
                if [ ! -z "$CONTAINER_ID" ]; then
                    echo "üî™ Killing container on port 9090: $CONTAINER_ID"
                    docker kill $CONTAINER_ID || echo "‚ö†Ô∏è Failed to kill container"
                else
                    echo "‚úÖ –ù–µ—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –Ω–∞ 9090"
                fi
                '''
            }
        }


        stage('Restart Containers') {
            steps {
                script {
                    sh "docker compose -f \"$WORKSPACE/backend/docker-compose.yml\" down"
                    sh "docker compose -f \"$WORKSPACE/backend/docker-compose.yml\" up -d --build"
                }
            }
        }
    }

    post {
        success { echo "‚úÖ –î–µ–ø–ª–æ–π –ø—Ä–æ—à—ë–ª —É—Å–ø–µ—à–Ω–æ" }
        failure { echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–µ–ø–ª–æ–µ" }
    }
}
